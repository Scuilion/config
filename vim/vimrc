scriptencoding utf-8
runtime bundle/vim-pathogen/autoload/pathogen.vim

call pathogen#infect()

" Consolas
set guifont=Consolas:h13
set guioptions=

colorscheme wombat
" show line numbers
set number             

filetype on
filetype plugin on
syntax on

set autoindent
set wildmenu
set mouse=a
set backspace=2

set ignorecase
set smartcase

set incsearch
set hlsearch
set ruler
"auto load files
:set autoread

" always sync
augroup testgroup
  autocmd BufEnter * :syntax sync fromstart
augroup END

let localleader = ','
inoremap jj <Esc>

" set ; to : in command mode
noremap : ;
noremap! : ;
noremap ; :
noremap! ; :
iunmap :
iunmap ;

" move to the next row as opposed to the next line
noremap j gj
noremap k gk

" Spaces instead of tab character
set expandtab
set smarttab
set shiftwidth=4
set softtabstop=4

" For wrapped lines
set nowrap
set showbreak=â•š
set linebreak nolist


"alt key for moving from file to file
noremap <A-k> <C-W>k
noremap <A-j> <C-W>j
noremap <A-h> <C-W>h
noremap <A-l> <C-W>l
noremap <A-p> <C-W>p
noremap <A-o> <C-W>o
noremap <A-n> <C-W>n
noremap <A-r> <C-W>r

"" Copy/Paste
noremap YY "+y<CR>
noremap P "+gP<CR>

"ca stands for command abbreviations
"always save all
ca w wa
ca W w
ca q1 q!

"force sudo save
cmap w!! w !sudo tee >/dev/null %

"Persistent Undo
set undofile
set undodir=~/.vim/undodir

" Fold options
set nofoldenable

" markdown drawer
nnoremap <Leader>md :MarkDrawer<cr>

" abbreviations
" all methods
ab allMethod metaClass.methods*.name.sort().unique()
:imap sout<Tab> System.out.println();<Esc>F)i

"for CtrlP
let g:ctrlp_map = '<c-p>'
let g:ctrlp_cmd = 'CtrlP'
set wildignore+=*\\tmp\\*,*.swp,*.zip,*.exe
let g:ctrlp_root_markers = ['.gitignore']
let g:ctrlp_working_path_mode = 'a'
let g:ctrlp_by_filename = 1
let g:ctrlp_custom_ignore = {
  \ 'dir':  '\v[\/](node_modules|target|dist)|(\.(git|hg|svn))$',
  \ 'file': '\v\.(exe|so|dll|class)$',
  \ }

" NERDTree
let NERDTreeBookmarksFile=expand('$HOME/.vim-NERDTreeBookmarks')
let NERDTreeShowBookmarks=1
let NERDTreeChDirMode=2
let NERDTreeIgnore=['\.swp$']
noremap <C-m> :NERDTreeFind<CR>
noremap \\ :NERDTreeToggle<CR>

" NERDCommenter
" Align line-wise comment delimiters flush left instead of following code indentation
let g:NERDDefaultAlign='left'
let g:NERDCommentEmptyLines=1

" Golang settings
augroup golang
  autocmd BufNewFile,BufRead *.go setlocal noexpandtab tabstop=4 shiftwidth=4
augroup END
let g:go_list_height=0

" Syntastic
let g:syntasticToggleMode = 'passive'
let g:syntastic_ignore_files = ['\m\.sbt$']

"let g:syntastic_java_checkers=['javac', 'checkstyle']
let g:syntastic_java_javac_config_file_enabled = 1

let g:syntastic_java_checkstyle_classpath = 'checkstyle-6.10.1.jar'
let g:syntastic_java_checkstyle_conf_file = 'google_checks.xml'

let g:syntastic_scalac_checkers=['scalac']

" VCR
let g:vrc_response_default_content_type='application/json'

" Grepper
nmap gs <plug>(GrepperOperator)
xmap gs <plug>(GrepperOperator)
nnoremap <leader>* :Grepper -tool ag -cword -noprompt -highlight<cr>

"set white space characters
:set listchars=eol:$,tab:>-,trail:~,extends:>,precedes:<

augroup setSyntax
    autocmd!
    autocmd BufNewFile, BufRead *.gradle  set syntax=groovy
augroup END

let g:qs_highlight_on_keys = ['f', 'F']
let g:qs_max_chars=80
